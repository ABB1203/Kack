package game.level.random;

import game.level.Level;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.util.ArrayList;
import java.util.Random;

public class RandomLevel extends Level {

	private final Random random = new Random();
	private ArrayList<Room> rooms = new ArrayList<Room>();

	/** 1 : sizes of the bounds
		2 : sizes of the big rooms
		3 : sizes of the small rooms (big rooms / 2)
	**/
	private int w1 = width / 2, h1 = (int) (height / 4.5), w2 = 16, h2 = (int) (w2 / 1.618), w3 = w2 / 2, h3 = h2 / 2;
	private final int BOUNDS = 0, BIG = 1, SMALL = 2;
	
	private Room[] bounds = new Room[2];

	public RandomLevel(int difficulty) {
		super(difficulty);

		width = 200;
		height = width * 10 / 16;

		generateLevel();
	}

	public void draw(Graphics g, double scale) {
		if (rooms.size() != 0) {
			Room r = rooms.get(0);

			g.setColor(Color.magenta);
			g.fillRect((int) (1 * scale), (int) (1 * scale), (int) (width * scale), (int) (height * scale));
			g.setColor(Color.green);
			g.fillRect((int) (r.getX() * scale), (int) (r.getY() * scale), (int) (r.getWidth() * scale), (int) (r.getHeight() * scale));
		}
	}

	protected void generateLevel() {
		rooms.add(new Room(w2, h2, this, BIG));
		generateBounds();
	}

	private void generateBounds() {
		for(Room bound : bounds) {
			while(true) {
				bound = new Room(w1, h1, this, BOUNDS);
			}
		}
	}

	public int getWidth() {
		return width;
	}

	public int getHeight() {
		return height;
	}

}
